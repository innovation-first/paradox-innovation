stages:
  - build
  - deploy

build-docker:
  stage: build
  image: gcr.io/kaniko-project/executor:v1.14.0-debug
  script:
    - echo $DOCKER_AUTH_CONFIG > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $CI_PROJECT_DIR
      --dockerfile ${CI_PROJECT_DIR}/Dockerfile
      --build-arg base_image_registry=artifactory.thalesdigital.io/docker
      --destination ${CI_REGISTRY_IMAGE}/blog:latest
  rules:
    # Trigger of CI when there is a push event on the main branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

helm-build:
  stage: build
  image: artifactory.thalesdigital.io/docker/alpine/helm:latest
  script:
  - helm package deployment/helm-charts/blog
  - mv blog-*.tgz blog.tgz
  - curl --fail-with-body --request POST
      --form "chart=@blog.tgz"
      --user gitlab-ci-token:${CI_JOB_TOKEN}
    ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/dev/charts
  rules:
    # Trigger of CI when there is a push event on the main branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy:
  stage: deploy
  image: $KAST_DEPLOYER_IMAGE
  script:
    # Add help repos
    - helm repo add blog ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/dev --username gitlab-ci-token --password $CI_JOB_TOKEN
    - helm repo add kast $KAST_REGISTRY_HELM_URL --username $KAST_REGISTRY_USER --password $KAST_REGISTRY_TOKEN
    - helm repo update
    # Setup gcloud
    - gcloud auth activate-service-account --key-file $GCP_SA_KEY
    - gcloud config set project $GCP_PROJECT
    - gcloud config set compute/region $GCP_REGION
    - gcloud config set compute/zone $GCP_ZONE
    # Setup cluster access
    - gcloud container clusters get-credentials $GCP_CLUSTER_NAME --region $GCP_REGION
    - kubectl config set-context --current --namespace=default
    - gcloud compute ssh ${GCP_SA_NAME}@${GCP_BASTION_NAME} --tunnel-through-iap --ssh-flag="-4 -L8888:localhost:8888 -N -q -f"
    - export HTTPS_PROXY=localhost:8888
    # Remove gitlab incluster access
    - unset KUBERNETES_SERVICE_HOST
    # Set kpack environment variables
    - export GITLAB_PULL_REGISTRY_USER=$CI_DEPLOY_USER
    - export GITLAB_PULL_REGISTRY_TOKEN=$CI_DEPLOY_PASSWORD
    # Deploy on kube cluster
    - kastctl install --kpack deployment/kpack.yaml --token $KAST_KEYSTORE_PASS
    # Update deployment image thanks to pull policy always
    - kubectl rollout restart --namespace blog deployment/blog
  rules:
   # Trigger of CI when there is a push event on the main branch
   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
